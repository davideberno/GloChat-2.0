{"version":3,"sources":["components/scroll-to-bottom/scroll-to-bottom.component.jsx","redux/socket/socket.selectors.js","redux/translation/translation.selectors.js","redux/user/user.types.js","redux/room/room.types.js","redux/translation/translation.types.js","redux/translation/translation.actions.js","components/copyright/copyright.component.jsx","components/join-room/join-room.component.jsx","redux/user/user.actions.js","redux/room/room.actions.js","components/is-typing/is-typing.component.jsx","redux/user/user.selectors.js","redux/room/room.selectors.js","components/message-input/message-input.component.jsx","components/message/message.component.jsx","components/messages/messages.component.jsx","components/users/users.component.jsx","languages.js","components/select-language/select-language.component.jsx","components/translation-switch/translation-switch.component.jsx","components/chat/chat.component.jsx","components/homepage/homepage.component.jsx","components/navbar/navbar.component.jsx","App.js","redux/user/user.reducer.js","redux/socket/socket.types.js","redux/socket/socket.reducer.js","redux/translation/translation.reducer.js","redux/room/room.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["messagesEnd","selectCurrentSocket","createSelector","state","socket","currentSocket","selectTranslation","translation","selectTranslationLanguage","language","selectTranslationOn","on","userActionTypes","SET_CURRENT_USER","roomActionTypes","SET_CURRENT_ROOM","translationActionTypes","SET_CURRENT_LANGUAGE","TOOGLE_TRANSLATION","setCurrentLanguage","type","payload","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","main","width","height","form","submit","JoinRoom","classes","useSelector","useState","userName","setUserName","roomName","setRoomName","warning","setWarning","dispatch","useDispatch","roomId","useParams","history","useHistory","useEffect","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","axios","post","socketId","id","then","res","data","error","setCurrentUser","setCurrentRoom","emit","push","catch","err","console","log","Alert","severity","TextField","required","fullWidth","label","autoFocus","value","onChange","target","gutterBottom","Button","onClick","e","randomRoom","Math","floor","random","pow","toString","generateRoom","Box","mt","IsTyping","isTyping","setIsTyping","setTimeout","selectCurrentUser","user","selectRoomName","room","MessageInput","message","setMessage","document","addEventListener","handleKeyDown","removeEventListener","key","handleSubmitMessage","text","name","placeholder","Message","msg","translatedText","ScrollToBottom","messages","scrollIntoView","behavior","ref","el","Messages","setMessages","prevMessages","map","i","root","background","Users","users","setUsers","List","dense","ListItem","button","ListItemAvatar","toUpperCase","ListItemText","languages","Afrikaans","Albanian","Amharic","Arabic","Armenian","Azerbaijani","Basque","Belarusian","Bengali","Bosnian","Bulgarian","Catalan","Cebuano","Chinese","Corsican","Croatian","Czech","Danish","Dutch","English","Esperanto","Estonian","Finnish","French","Frisian","Galician","Georgian","German","Greek","Gujarati","Creole","Hausa","Hawaiian","Hebrew","Hindi","Hmong","Hungarian","Icelandic","Igbo","Indonesian","Irish","Italian","Japanese","Javanese","Kannada","Kazakh","Khmer","Korean","Kurdish","Kyrgyz","Lao","Latin","Latvian","Lithuanian","Luxembourgish","Macedonian","Malagasy","Malay","Malayalam","Maltese","Maori","Marathi","Mongolian","Burmese","Nepali","Norwegian","Chichewa","Pashto","Persian","Polish","Portuguese","Punjabi","Romanian","Russian","Samoan","Gaelic","Serbian","Sesotho","Shona","Sindhi","Sinhalese","Slovak","Slovenian","Somali","Spanish","Sundanese","Swahili","Swedish","Filipino","Tajik","Tamil","Telugu","Thai","Turkish","Ukrainian","Urdu","Uzbek","Vietnamese","Welsh","Xhosa","Yiddish","Yoruba","Zulu","formControl","minWidth","selectEmpty","SelectLanguage","translationOn","FormControl","InputLabel","Select","disabled","labelId","Object","keys","lang","MenuItem","TranslationSwitch","FormControlLabel","control","Switch","checked","toogleTranslation","labelPlacement","Chat","Homepage","style","fontSize","Grid","container","item","xs","menuButton","marginRight","title","flexGrow","Navbar","path","location","pathname","AppBar","position","Toolbar","IconButton","edge","aria-label","App","off","exact","INITIAL_STATE","userReducer","action","socketActionTypes","SET_SOCKET","io","socketReducer","translationReducer","roomReducer","rootReducer","combineReducers","middleware","logger","store","createStore","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.31515158.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport \"./scroll-to-bottom.styles.scss\";\n\nlet messagesEnd;\n\nconst ScrollToBottom = ({ messages }) => {\n  useEffect(() => {\n    const scrollToBottom = () => {\n      messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    };\n    scrollToBottom();\n  }, [messages]);\n\n  return (\n    <div\n      className=\"dummy-div-scroll\"\n      ref={el => {\n        messagesEnd = el;\n      }}\n    />\n  );\n};\n\nexport default ScrollToBottom;\n","import { createSelector } from \"reselect\";\n\nconst selectSocket = (state) => state.socket;\n\nexport const selectCurrentSocket = createSelector(\n  [selectSocket],\n  (socket) => socket.currentSocket\n);\n","import { createSelector } from \"reselect\";\n\nconst selectTranslation = (state) => state.translation;\n\nexport const selectTranslationLanguage = createSelector(\n  [selectTranslation],\n  (translation) => translation.language\n);\n\nexport const selectTranslationOn = createSelector(\n  [selectTranslation],\n  (translation) => translation.on\n);\n","const userActionTypes = {\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\n};\n\nexport default userActionTypes;\n","const roomActionTypes = {\n  SET_CURRENT_ROOM: \"SET_CURRENT_ROOM\",\n};\n\nexport default roomActionTypes;\n","const translationActionTypes = {\n  SET_CURRENT_LANGUAGE: \"SET_CURRENT_LANGUAGE\",\n  TOOGLE_TRANSLATION: \"TOOGLE_TRANSLATION\",\n};\n\nexport default translationActionTypes;\n","import translationActionTypes from \"./translation.types\";\n\nexport const setCurrentLanguage = (language) => ({\n  type: translationActionTypes.SET_CURRENT_LANGUAGE,\n  payload: language,\n});\n\nexport const toogleTranslation = (translationOn) => ({\n  type: translationActionTypes.TOOGLE_TRANSLATION,\n  payload: translationOn,\n});\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://github.com/davideberno\">\n        Davide Bernocchi\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { selectCurrentSocket } from \"../../redux/socket/socket.selectors\";\nimport { selectTranslationLanguage } from \"../../redux/translation/translation.selectors\";\n\nimport { setCurrentUser } from \"../../redux/user/user.actions\";\nimport { setCurrentRoom } from \"../../redux/room/room.actions\";\nimport { setCurrentLanguage } from \"../../redux/translation/translation.actions\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Copyright from \"../copyright/copyright.component\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst JoinRoom = () => {\n  const classes = useStyles();\n  const socket = useSelector(selectCurrentSocket);\n  const language = useSelector(selectTranslationLanguage);\n  const [userName, setUserName] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [warning, setWarning] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const { roomId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (roomId) {\n      setRoomName(roomId);\n    }\n  }, [roomId]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(\"/user\", { userName, roomName, language, socketId: socket.id })\n      .then((res) => {\n        const { userName, roomName, language, error } = res.data;\n        if (error) {\n          setWarning(error);\n        } else {\n          dispatch(setCurrentUser(userName));\n          dispatch(setCurrentLanguage(language));\n          dispatch(setCurrentRoom(roomName));\n          socket.emit(\"join\", { userName, roomName });\n          history.push(`/chat/${roomName}`);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const generateRoom = (event) => {\n    event.preventDefault();\n    const randomRoom = Math.floor(Math.random() * Math.pow(10, 6)).toString();\n    setRoomName(randomRoom);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ChatIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Join room\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          {warning ? <Alert severity=\"warning\">{warning}</Alert> : null}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Username\"\n            autoFocus\n            value={userName}\n            onChange={(event) => setUserName(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Choose room name\"\n            value={roomName}\n            onChange={(event) => setRoomName(event.target.value)}\n          />\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Or generate one :\n          </Typography>\n          {!roomName ? (\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => generateRoom(e)}\n            >\n              Generate\n            </Button>\n          ) : null}\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Join\n          </Button>\n        </form>\n      </div>\n      <Box mt={4}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default JoinRoom;\n","import userActionTypes from \"./user.types\";\n\nexport const setCurrentUser = (userName) => ({\n  type: userActionTypes.SET_CURRENT_USER,\n  payload: userName,\n});\n","import roomActionTypes from \"./room.types\";\n\nexport const setCurrentRoom = (roomName) => ({\n  type: roomActionTypes.SET_CURRENT_ROOM,\n  payload: roomName,\n});\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectCurrentSocket } from \"../../redux/socket/socket.selectors\";\n\nimport \"./is-typing.styles.scss\";\n\nconst IsTyping = () => {\n  const socket = useSelector(selectCurrentSocket);\n\n  const [isTyping, setIsTyping] = useState(\"\");\n\n  useEffect(() => {\n    socket.on(\"isTyping\", (userName) => {\n      setIsTyping(userName);\n      setTimeout(() => {\n        setIsTyping(\"\");\n      }, 2000);\n    });\n  }, [socket]);\n\n  return isTyping ? (\n    <span className=\"is-typing-allert\">{`${isTyping} is typing...`}</span>\n  ) : null;\n};\n\nexport default IsTyping;\n","import { createSelector } from \"reselect\";\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.userName\n);\n","import { createSelector } from \"reselect\";\n\nconst selectRoom = (state) => state.room;\n\nexport const selectRoomName = createSelector(\n  [selectRoom],\n  (room) => room.roomName\n);\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport IsTyping from \"../is-typing/is-typing.component\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { selectCurrentSocket } from \"../../redux/socket/socket.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectTranslationLanguage } from \"../../redux/translation/translation.selectors\";\nimport { selectRoomName } from \"../../redux/room/room.selectors\";\n\nimport \"./message-input.styles.scss\";\n\nconst MessageInput = () => {\n  const socket = useSelector(selectCurrentSocket);\n  const userName = useSelector(selectCurrentUser);\n  const language = useSelector(selectTranslationLanguage);\n  const roomName = useSelector(selectRoomName);\n\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleSubmitMessage();\n    }\n  };\n\n  const handleChange = (event) => {\n    socket.emit(\"isTyping\", { userName, roomName });\n\n    setMessage(event.target.value);\n  };\n\n  const handleSubmitMessage = () => {\n    if (message) {\n      socket.emit(\"message\", {\n        userName,\n        language,\n        roomName,\n        text: message,\n      });\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <form className=\"message-form\">\n      <IsTyping />\n      <input\n        id=\"message\"\n        name=\"message\"\n        placeholder=\"Type a message...\"\n        value={message}\n        onChange={handleChange}\n      />\n      <Button onClick={handleSubmitMessage}>Send</Button>\n    </form>\n  );\n};\n\nexport default MessageInput;\n","import React from \"react\";\n\nimport \"./message.styles.scss\";\n\nconst Message = ({ msg, userName }) => (\n  <div\n    className={`message-container ${\n      userName === msg.userName ? \"container-outgoing\" : \"container-incoming\"\n    }`}\n  >\n    {userName !== msg.userName ? (\n      <div className=\"sender-username\">{msg.userName}</div>\n    ) : null}\n    <div\n      className={`message ${\n        userName === msg.userName ? \"outgoing\" : \"incoming\"\n      }`}\n    >\n      {msg.text}\n    </div>\n    {msg.translatedText ? (\n      <>\n        <div className=\"sender-username\">Translation:</div>\n        <div\n          className={`message translatedText ${\n            userName === msg.userName ? \"outgoing\" : \"incoming\"\n          }`}\n        >\n          {msg.translatedText}\n        </div>\n      </>\n    ) : null}\n  </div>\n);\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Message from \"../message/message.component\";\nimport ScrollToBottom from \"../scroll-to-bottom/scroll-to-bottom.component\";\n\nimport { selectCurrentSocket } from \"../../redux/socket/socket.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nimport \"./messages.styles.scss\";\n\nconst Messages = () => {\n  const socket = useSelector(selectCurrentSocket);\n  const userName = useSelector(selectCurrentUser);\n\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"messages-container\">\n      <div className=\"messages\">\n        {messages.map((msg, i) => (\n          <Message key={i} msg={msg} userName={userName} />\n        ))}\n        <ScrollToBottom messages={messages} />\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectCurrentSocket } from \"../../redux/socket/socket.selectors\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./users.styles.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  avatar: {\n    color: \"white\",\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nconst Users = () => {\n  const classes = useStyles();\n  const socket = useSelector(selectCurrentSocket);\n\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"roomUsers\", (users) => {\n      setUsers(users);\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"users\">\n      <Typography component=\"h1\" variant=\"h5\">\n        Users:\n      </Typography>\n      <List dense className={classes.root}>\n        {users.map((user, i) => {\n          return (\n            <ListItem key={i} button>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>\n                  {user.userName[0].toUpperCase()}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={user.userName}\n                className=\"username-label\"\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","const languages = {\n  Afrikaans: \"af\",\n  Albanian: \"sq\",\n  Amharic: \"am\",\n  Arabic: \"ar\",\n  Armenian: \"hy\",\n  Azerbaijani: \"az\",\n  Basque: \"eu\",\n  Belarusian: \"be\",\n  Bengali: \"bn\",\n  Bosnian: \"bs\",\n  Bulgarian: \"bg\",\n  Catalan: \"ca\",\n  Cebuano: \"ceb\",\n  Chinese: \"zh\",\n  Corsican: \"co\",\n  Croatian: \"hr\",\n  Czech: \"cs\",\n  Danish: \"da\",\n  Dutch: \"nl\",\n  English: \"en\",\n  Esperanto: \"eo\",\n  Estonian: \"et\",\n  Finnish: \"fi\",\n  French: \"fr\",\n  Frisian: \"fy\",\n  Galician: \"gl\",\n  Georgian: \"ka\",\n  German: \"de\",\n  Greek: \"el\",\n  Gujarati: \"gu\",\n  Creole: \"ht\",\n  Hausa: \"ha\",\n  Hawaiian: \"haw\",\n  Hebrew: \"he\",\n  Hindi: \"hi\",\n  Hmong: \"hmn\",\n  Hungarian: \"hu\",\n  Icelandic: \"is\",\n  Igbo: \"ig\",\n  Indonesian: \"id\",\n  Irish: \"ga\",\n  Italian: \"it\",\n  Japanese: \"ja\",\n  Javanese: \"jv\",\n  Kannada: \"kn\",\n  Kazakh: \"kk\",\n  Khmer: \"km\",\n  Korean: \"ko\",\n  Kurdish: \"ku\",\n  Kyrgyz: \"ky\",\n  Lao: \"lo\",\n  Latin: \"la\",\n  Latvian: \"lv\",\n  Lithuanian: \"lt\",\n  Luxembourgish: \"lb\",\n  Macedonian: \"mk\",\n  Malagasy: \"mg\",\n  Malay: \"ms\",\n  Malayalam: \"ml\",\n  Maltese: \"mt\",\n  Maori: \"mi\",\n  Marathi: \"mr\",\n  Mongolian: \"mn\",\n  Burmese: \"my\",\n  Nepali: \"ne\",\n  Norwegian: \"no\",\n  Chichewa: \"ny\",\n  Pashto: \"ps\",\n  Persian: \"fa\",\n  Polish: \"pl\",\n  Portuguese: \"pt\",\n  Punjabi: \"pa\",\n  Romanian: \"ro\",\n  Russian: \"ru\",\n  Samoan: \"sm\",\n  Gaelic: \"gd\",\n  Serbian: \"sr\",\n  Sesotho: \"st\",\n  Shona: \"sn\",\n  Sindhi: \"sd\",\n  Sinhalese: \"si\",\n  Slovak: \"sk\",\n  Slovenian: \"sl\",\n  Somali: \"so\",\n  Spanish: \"es\",\n  Sundanese: \"su\",\n  Swahili: \"sw\",\n  Swedish: \"sv\",\n  Filipino: \"tl\",\n  Tajik: \"tg\",\n  Tamil: \"ta\",\n  Telugu: \"te\",\n  Thai: \"th\",\n  Turkish: \"tr\",\n  Ukrainian: \"uk\",\n  Urdu: \"ur\",\n  Uzbek: \"uz\",\n  Vietnamese: \"vi\",\n  Welsh: \"cy\",\n  Xhosa: \"xh\",\n  Yiddish: \"yi\",\n  Yoruba: \"yo\",\n  Zulu: \"zu\"\n};\n\nexport default languages;\n","import React from \"react\";\n\nimport axios from \"axios\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport {\n  selectTranslationLanguage,\n  selectTranslationOn,\n} from \"../../redux/translation/translation.selectors\";\n\nimport { setCurrentLanguage } from \"../../redux/translation/translation.actions\";\n\nimport languages from \"../../languages\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(4),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SelectLanguage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const userName = useSelector(selectCurrentUser);\n  const language = useSelector(selectTranslationLanguage);\n  const translationOn = useSelector(selectTranslationOn);\n\n  const setNewLanguage = (event) => {\n    console.log(event.target.value);\n    axios\n      .post(\"/language\", { userName, language: event.target.value })\n      .then((res) => dispatch(setCurrentLanguage(res.data.language)))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"language-select\">Language</InputLabel>\n      <Select\n        disabled={translationOn ? false : true}\n        labelId=\"language-select\"\n        value={language}\n        onChange={setNewLanguage}\n      >\n        {Object.keys(languages).map((lang, i) => (\n          <MenuItem key={i} value={lang}>\n            {lang}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default SelectLanguage;\n","import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport { selectTranslationOn } from \"../../redux/translation/translation.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nimport { toogleTranslation } from \"../../redux/translation/translation.actions\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst TranslationSwitch = () => {\n  const dispatch = useDispatch();\n\n  const userName = useSelector(selectCurrentUser);\n  const translationOn = useSelector(selectTranslationOn);\n\n  const handleChange = () => {\n    axios\n      .post(\"translationOn\", { userName })\n      .then((res) => dispatch(toogleTranslation(res.data.translationOn)))\n      .catch((err) => console.log(err));\n  };\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={translationOn}\n          onChange={handleChange}\n          color=\"primary\"\n        />\n      }\n      label=\"Translation\"\n      labelPlacement=\"start\"\n    />\n  );\n};\n\nexport default TranslationSwitch;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport MessageInput from \"../message-input/message-input.component\";\nimport Messages from \"../messages/messages.component\";\nimport Users from \"../users/users.component\";\nimport SelectLanguage from \"../select-language/select-language.component\";\nimport TranslationSwitch from \"../translation-switch/translation-switch.component\";\nimport JoinRoom from \"../join-room/join-room.component\";\n\nimport { selectRoomName } from \"../../redux/room/room.selectors\";\n\nimport \"./chat.styles.scss\";\n\nconst Chat = () => {\n  const roomName = useSelector(selectRoomName);\n  return !roomName ? (\n    <JoinRoom />\n  ) : (\n    <div className=\"chat\">\n      <div className=\"chats\">\n        <Users />\n      </div>\n      <div className=\"translation\">\n        <TranslationSwitch />\n        <SelectLanguage />\n      </div>\n      <div className=\"messages\">\n        <Messages />\n      </div>\n      <div className=\"message-input\">\n        <MessageInput />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Copyright from \"../copyright/copyright.component\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n}));\n\nconst Homepage = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ChatIcon style={{ fontSize: 40 }} />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h2\" gutterBottom>\n          GloChat\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => history.push(\"/join\")}\n            >\n              Join room\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectRoomName } from \"../../redux/room/room.selectors\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const path = history.location.pathname;\n\n  const roomName = useSelector(selectRoomName);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() =>\n              roomName ? history.push(`${path}`) : history.push(\"/\")\n            }\n          >\n            <ChatIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            GloChat\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport JoinRoom from \"./components/join-room/join-room.component\";\nimport Chat from \"./components/chat/chat.component\";\nimport Homepage from \"./components/homepage/homepage.component\";\nimport Navbar from \"./components/navbar/navbar.component\";\n\nimport { selectCurrentSocket } from \"./redux/socket/socket.selectors\";\n\nimport \"./App.scss\";\n\nconst App = () => {\n  const socket = useSelector(selectCurrentSocket);\n\n  useEffect(() => {\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  });\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/join\" component={JoinRoom} />\n        <Route exact path=\"/chat/:roomId\" component={Chat} />\n        <Route path=\"/\" component={Homepage} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import userActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  userName: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        userName: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","const socketActionTypes = {\n  SET_SOCKET: \"SET_SOCKET\",\n};\n\nexport default socketActionTypes;\n","import socketActionTypes from \"./socket.types\";\n\nimport io from \"socket.io-client\";\n\nconst INITIAL_STATE = {\n  currentSocket: io(\"https://glochat2.herokuapp.com/\"),\n};\n\nconst socketReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case socketActionTypes.SET_SOCKET:\n      return {\n        ...state,\n        currentSocket: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default socketReducer;\n","import translationActionTypes from \"./translation.types\";\n\nconst INITIAL_STATE = {\n  language: \"English\",\n  on: false,\n};\n\nconst translationReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case translationActionTypes.SET_CURRENT_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload,\n      };\n    case translationActionTypes.TOOGLE_TRANSLATION:\n      return {\n        ...state,\n        on: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default translationReducer;\n","import roomActionTypes from \"./room.types\";\n\nconst INITIAL_STATE = {\n  roomName: null,\n};\n\nconst roomReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case roomActionTypes.SET_CURRENT_ROOM:\n      return {\n        ...state,\n        roomName: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default roomReducer;\n","import { combineReducers } from \"redux\";\n\nimport userReducer from \"./user/user.reducer\";\nimport socketReducer from \"./socket/socket.reducer\";\nimport translationReducer from \"./translation/translation.reducer\";\nimport roomReducer from \"./room/room.reducer\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  socket: socketReducer,\n  translation: translationReducer,\n  room: roomReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst middleware = [logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleware));\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}